// Generated by gencpp from file affordance_experiment/PerformExperiment.msg
// DO NOT EDIT!


#ifndef AFFORDANCE_EXPERIMENT_MESSAGE_PERFORMEXPERIMENT_H
#define AFFORDANCE_EXPERIMENT_MESSAGE_PERFORMEXPERIMENT_H

#include <ros/service_traits.h>


#include <affordance_experiment/PerformExperimentRequest.h>
#include <affordance_experiment/PerformExperimentResponse.h>


namespace affordance_experiment
{

struct PerformExperiment
{

typedef PerformExperimentRequest Request;
typedef PerformExperimentResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PerformExperiment
} // namespace affordance_experiment


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::affordance_experiment::PerformExperiment > {
  static const char* value()
  {
    return "6f5d2f09f803b7c0cfced3acb6c92077";
  }

  static const char* value(const ::affordance_experiment::PerformExperiment&) { return value(); }
};

template<>
struct DataType< ::affordance_experiment::PerformExperiment > {
  static const char* value()
  {
    return "affordance_experiment/PerformExperiment";
  }

  static const char* value(const ::affordance_experiment::PerformExperiment&) { return value(); }
};


// service_traits::MD5Sum< ::affordance_experiment::PerformExperimentRequest> should match 
// service_traits::MD5Sum< ::affordance_experiment::PerformExperiment > 
template<>
struct MD5Sum< ::affordance_experiment::PerformExperimentRequest>
{
  static const char* value()
  {
    return MD5Sum< ::affordance_experiment::PerformExperiment >::value();
  }
  static const char* value(const ::affordance_experiment::PerformExperimentRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::affordance_experiment::PerformExperimentRequest> should match 
// service_traits::DataType< ::affordance_experiment::PerformExperiment > 
template<>
struct DataType< ::affordance_experiment::PerformExperimentRequest>
{
  static const char* value()
  {
    return DataType< ::affordance_experiment::PerformExperiment >::value();
  }
  static const char* value(const ::affordance_experiment::PerformExperimentRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::affordance_experiment::PerformExperimentResponse> should match 
// service_traits::MD5Sum< ::affordance_experiment::PerformExperiment > 
template<>
struct MD5Sum< ::affordance_experiment::PerformExperimentResponse>
{
  static const char* value()
  {
    return MD5Sum< ::affordance_experiment::PerformExperiment >::value();
  }
  static const char* value(const ::affordance_experiment::PerformExperimentResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::affordance_experiment::PerformExperimentResponse> should match 
// service_traits::DataType< ::affordance_experiment::PerformExperiment > 
template<>
struct DataType< ::affordance_experiment::PerformExperimentResponse>
{
  static const char* value()
  {
    return DataType< ::affordance_experiment::PerformExperiment >::value();
  }
  static const char* value(const ::affordance_experiment::PerformExperimentResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AFFORDANCE_EXPERIMENT_MESSAGE_PERFORMEXPERIMENT_H
